From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: KurumiFake <kurumiisshidowife@gmail.com>
Date: Fri, 15 Apr 2022 07:29:36 +0000
Subject: [PATCH] wyspigot's fixup i guess


diff --git a/src/main/java/net/minecraft/server/PacketDataSerializer.java b/src/main/java/net/minecraft/server/PacketDataSerializer.java
index a89d654a84261793f5263877f628a1c7a1f947f1..7cf1eea8b4b6da5c880da87985fa5f567af0316c 100644
--- a/src/main/java/net/minecraft/server/PacketDataSerializer.java
+++ b/src/main/java/net/minecraft/server/PacketDataSerializer.java
@@ -167,7 +167,7 @@ public class PacketDataSerializer extends ByteBuf {
             return null;
         } else {
             this.readerIndex(i);
-            return NBTCompressedStreamTools.a((DataInput) (new ByteBufInputStream(this)), new NBTReadLimiter(64000L)); // FlamePaper - Reduce NBT read limit
+            return NBTCompressedStreamTools.a((DataInput) (new ByteBufInputStream(this)), new NBTReadLimiter(48000L)); // FlamePaper - Reduce NBT read limit // WYSpIgot - down even  m o r e
         }
     }
 
diff --git a/src/main/java/org/github/paperspigot/PaperSpigotConfig.java b/src/main/java/org/github/paperspigot/PaperSpigotConfig.java
index f88deb3fbb3bb24f3bf2247b72a25d17c4e68ce4..ce93af7caeb73b9e81b26abf078f3d39a38d3c5b 100644
--- a/src/main/java/org/github/paperspigot/PaperSpigotConfig.java
+++ b/src/main/java/org/github/paperspigot/PaperSpigotConfig.java
@@ -174,6 +174,49 @@ public class PaperSpigotConfig
         Bukkit.getLogger().info( "Data value allowed items: " + StringUtils.join(dataValueAllowedItems, ", ") );
     }
 
+    public static boolean stackableLavaBuckets;
+    public static boolean stackableWaterBuckets;
+    public static boolean stackableMilkBuckets;
+    private static void stackableBuckets()
+    {
+        stackableLavaBuckets = getBoolean( "stackable-buckets.lava", false );
+        stackableWaterBuckets = getBoolean( "stackable-buckets.water", false );
+        stackableMilkBuckets = getBoolean( "stackable-buckets.milk", false );
+
+        Field maxStack;
+
+        try {
+            maxStack = Material.class.getDeclaredField("maxStack");
+            maxStack.setAccessible(true);
+
+            Field modifiers = Field.class.getDeclaredField("modifiers");
+            modifiers.setAccessible(true);
+            modifiers.setInt(maxStack, maxStack.getModifiers() & ~Modifier.FINAL);
+        } catch (Exception e) {
+            e.printStackTrace();
+            return;
+        }
+
+        try {
+            if (stackableLavaBuckets) {
+                maxStack.set(Material.LAVA_BUCKET, Material.BUCKET.getMaxStackSize());
+                Items.LAVA_BUCKET.c(Material.BUCKET.getMaxStackSize());
+            }
+
+            if (stackableWaterBuckets) {
+                maxStack.set(Material.WATER_BUCKET, Material.BUCKET.getMaxStackSize());
+                Items.WATER_BUCKET.c(Material.BUCKET.getMaxStackSize());
+            }
+
+            if (stackableMilkBuckets) {
+                maxStack.set(Material.MILK_BUCKET, Material.BUCKET.getMaxStackSize());
+                Items.MILK_BUCKET.c(Material.BUCKET.getMaxStackSize());
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
     public static boolean warnForExcessiveVelocity;
     private static void excessiveVelocityWarning()
     {
