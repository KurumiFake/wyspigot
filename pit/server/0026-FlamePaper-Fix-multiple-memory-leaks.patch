From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: BuildTools <LinsaFTW@users.noreply.github.com>
Date: Wed, 4 Nov 2020 02:35:11 -0300
Subject: [PATCH] (FlamePaper) Fix multiple memory leaks


diff --git a/src/main/java/net/minecraft/server/EnchantmentManager.java b/src/main/java/net/minecraft/server/EnchantmentManager.java
index 98656815ff5b4a176e145162d0077c30cb1ea1a6..07c72dc406954ac5c50f5d11e84fbe4cb6c325ce 100644
--- a/src/main/java/net/minecraft/server/EnchantmentManager.java
+++ b/src/main/java/net/minecraft/server/EnchantmentManager.java
@@ -169,6 +169,9 @@ public class EnchantmentManager {
             a((EnchantmentManager.EnchantmentModifier) EnchantmentManager.d, entityliving.bA());
         }
 
+        // FlamePaper - Minetick fix memory leaks
+        EnchantmentManager.e.a = null;
+        EnchantmentManager.e.b = null;
     }
 
     public static void b(EntityLiving entityliving, Entity entity) {
@@ -182,6 +185,9 @@ public class EnchantmentManager {
             a((EnchantmentManager.EnchantmentModifier) EnchantmentManager.e, entityliving.bA());
         }
 
+        // FlamePaper - Minetick fix memory leaks
+        EnchantmentManager.e.a = null;
+        EnchantmentManager.e.b = null;
     }
 
     public static int a(EntityLiving entityliving) {
diff --git a/src/main/java/net/minecraft/server/NetworkManager.java b/src/main/java/net/minecraft/server/NetworkManager.java
index 9d23c6c0ccaa91a46cb60474461f3977fa793122..2ec3c9fa859ff5f5e37a898b34ba1e11243e879c 100644
--- a/src/main/java/net/minecraft/server/NetworkManager.java
+++ b/src/main/java/net/minecraft/server/NetworkManager.java
@@ -239,6 +239,7 @@ public class NetworkManager extends SimpleChannelInboundHandler<Packet> {
     }
 
     public void close(IChatBaseComponent ichatbasecomponent) {
+        this.i.clear(); // FlamePaper - Minetick fix memory leaks
         // Spigot Start
         this.preparing = false;
         // Spigot End
diff --git a/src/main/java/net/minecraft/server/PersistentCollection.java b/src/main/java/net/minecraft/server/PersistentCollection.java
index 6459594c7f58c48ff04f0576309cc462720faf73..12b30412652df384b511ccfd922da88a6c10f0ba 100644
--- a/src/main/java/net/minecraft/server/PersistentCollection.java
+++ b/src/main/java/net/minecraft/server/PersistentCollection.java
@@ -187,4 +187,14 @@ public class PersistentCollection {
             return oshort.shortValue();
         }
     }
+
+    // FlamePaper - Minetick fix memory leaks
+    public void removeTrackedPlayer(EntityHuman entityhuman) {
+        for(Object o: this.c) {
+            if(o instanceof WorldMap) {
+                WorldMap map = (WorldMap) o;
+                map.untrackPlayer(entityhuman);
+            }
+        }
+    }
 }
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index e5bf755b1f3acb758f47eec27d586899bc213074..0f5d844cee20fd971e712591d45220fb6818f23c 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -1097,6 +1097,7 @@ public abstract class World implements IBlockAccess {
         entity.die();
         if (entity instanceof EntityHuman) {
             this.players.remove(entity);
+            this.worldMaps.removeTrackedPlayer((EntityHuman) entity); // FlamePaper - Minetick fix memory leaks
             // Spigot start
             for ( Object o : worldMaps.c )
             {
@@ -1125,6 +1126,7 @@ public abstract class World implements IBlockAccess {
         entity.die();
         if (entity instanceof EntityHuman) {
             this.players.remove(entity);
+            this.worldMaps.removeTrackedPlayer((EntityHuman) entity); // FlamePaper - Minetick fix memory leaks
             this.everyoneSleeping();
         }
 
diff --git a/src/main/java/net/minecraft/server/WorldMap.java b/src/main/java/net/minecraft/server/WorldMap.java
index 162b3a31a68802f6bd62b14ec636df5ef0ad7ae9..9bf89d5030bd522acb4a71d6b63d5f432dba614d 100644
--- a/src/main/java/net/minecraft/server/WorldMap.java
+++ b/src/main/java/net/minecraft/server/WorldMap.java
@@ -313,4 +313,17 @@ public class WorldMap extends PersistentBase {
 
         }
     }
+
+    // FlamePaper - Minetick fix memory leaks
+    public void untrackPlayer(EntityHuman entityhuman) {
+        if(this.i.containsKey(entityhuman)) {
+            this.i.remove(entityhuman);
+            java.util.Iterator<WorldMapHumanTracker> iter = (java.util.Iterator<WorldMapHumanTracker>) this.g.iterator();
+            while(iter.hasNext()) {
+                if(iter.next().trackee == entityhuman) {
+                    iter.remove();
+                }
+            }
+        }
+    }
 }
