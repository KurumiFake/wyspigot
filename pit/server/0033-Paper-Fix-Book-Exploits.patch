From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: linsaftw <linsaftw@users.noreply.github.com>
Date: Sun, 25 Apr 2021 11:53:18 -0300
Subject: [PATCH] (Paper) Fix Book Exploits

// wyspigot - huh, isnt this a paper backport?
// also why is stackable bucket wiped

diff --git a/src/main/java/net/minecraft/server/PacketDataSerializer.java b/src/main/java/net/minecraft/server/PacketDataSerializer.java
index e2eb305468ff76026dc9b24d59394cfc94501273..a89d654a84261793f5263877f628a1c7a1f947f1 100644
--- a/src/main/java/net/minecraft/server/PacketDataSerializer.java
+++ b/src/main/java/net/minecraft/server/PacketDataSerializer.java
@@ -167,7 +167,7 @@ public class PacketDataSerializer extends ByteBuf {
             return null;
         } else {
             this.readerIndex(i);
-            return NBTCompressedStreamTools.a((DataInput) (new ByteBufInputStream(this)), new NBTReadLimiter(2097152L));
+            return NBTCompressedStreamTools.a((DataInput) (new ByteBufInputStream(this)), new NBTReadLimiter(64000L)); // FlamePaper - Reduce NBT read limit
         }
     }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBook.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBook.java
index 0b5ada0118f521eaca65b0fd67ebf232fa183b1a..2de6fbb2e6b96839e71eb9b48a99d5f99d84bf45 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBook.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBook.java
@@ -33,8 +33,12 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
     static final ItemMetaKey BOOK_PAGES = new ItemMetaKey("pages");
     static final ItemMetaKey RESOLVED = new ItemMetaKey("resolved");
     static final ItemMetaKey GENERATION = new ItemMetaKey("generation");
-    static final int MAX_PAGE_LENGTH = Short.MAX_VALUE; // TODO: Check me
-    static final int MAX_TITLE_LENGTH = 0xffff;
+    // FlamePaper start - Fix Book Exploits
+    static final int MAX_PAGE_LENGTH = 340;
+    static final int MAX_TITLE_LENGTH = 32;
+    static final int MAX_PAGES = org.github.paperspigot.PaperSpigotConfig.bookMaxPages;
+    static final int MAX_AUTHOR_LENGTH = 16;
+    // FlamePaper end - Fix Book Exploits
 
     protected String title;
     protected String author;
@@ -61,11 +65,13 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
         super(tag);
 
         if (tag.hasKey(BOOK_TITLE.NBT)) {
-            this.title = limit( tag.getString(BOOK_TITLE.NBT), 1024 ); // Spigot
+            // FlamePaper - Apply title limit
+            this.title = limit( tag.getString(BOOK_TITLE.NBT), MAX_TITLE_LENGTH ); // Spigot
         }
 
         if (tag.hasKey(BOOK_AUTHOR.NBT)) {
-            this.author = limit( tag.getString(BOOK_AUTHOR.NBT), 1024 ); // Spigot
+            // FlamePaper - Apply author limit
+            this.author = limit( tag.getString(BOOK_AUTHOR.NBT), MAX_AUTHOR_LENGTH ); // Spigot
         }
 
         boolean resolved = false;
@@ -80,7 +86,8 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
         if (tag.hasKey(BOOK_PAGES.NBT) && handlePages) {
             NBTTagList pages = tag.getList(BOOK_PAGES.NBT, 8);
 
-            for (int i = 0; i < pages.size(); i++) {
+            // FlamePaper - Fix Book Exploits
+            for (int i = 0; i < Math.min(pages.size(), MAX_PAGES); i++) {
                 String page = pages.getString(i);
                 if (resolved) {
                     try {
@@ -90,7 +97,8 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
                         // Ignore and treat as an old book
                     }
                 }
-                addPage( limit( page, 2048 ) ); // Spigot
+                // FlamePaper - Fix Book Exploits
+                addPage( limit( page, MAX_PAGE_LENGTH ) ); // Spigot
             }
         }
     }
@@ -104,9 +112,18 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
 
         Iterable<?> pages = SerializableMeta.getObject(Iterable.class, map, BOOK_PAGES.BUKKIT, true);
         if(pages != null) {
+            int pageCount = 0;
+
             for (Object page : pages) {
-                if (page instanceof String) {
-                    addPage((String) page);
+                // FlamePaper - Fix Book Exploits
+                if (pageCount < MAX_PAGES) {
+                    if (page instanceof String) {
+                        addPage((String) page);
+                    }
+
+                    pageCount++;
+                } else {
+                    break;
                 }
             }
         }
@@ -186,12 +203,12 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
     public boolean setTitle(final String title) {
         if (title == null) {
             this.title = null;
-            return true;
-        } else if (title.length() > MAX_TITLE_LENGTH) {
-            return false;
+        } else {
+            // FlamePaper - Fix Book Exploits
+            this.title = title.substring(0, Math.min(title.length(), MAX_PAGE_LENGTH));
         }
 
-        this.title = title;
+        // FlamePaper - Fix Book Exploits
         return true;
     }
 
@@ -213,7 +230,8 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
             throw new IllegalArgumentException("Invalid page number " + page + "/" + pages.size());
         }
 
-        String newText = text == null ? "" : text.length() > MAX_PAGE_LENGTH ? text.substring(0, MAX_PAGE_LENGTH) : text;
+        // FlamePaper - Fix Book Exploits
+        String newText = text == null ? "" : text.substring(0, Math.min(text.length(), MAX_PAGE_LENGTH));
         pages.set(page - 1, CraftChatMessage.fromString(newText, true)[0]);
     }
 
@@ -224,14 +242,22 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
     }
 
     public void addPage(final String... pages) {
-        for (String page : pages) {
-            if (page == null) {
-                page = "";
-            } else if (page.length() > MAX_PAGE_LENGTH) {
-                page = page.substring(0, MAX_PAGE_LENGTH);
-            }
+        // FlamePaper - Fix Book Exploits
+        for (int i = 0; i < Math.min(pages.length, MAX_PAGES); i++) {
+            // FlamePaper - Fix Book Exploits
+            if (getPageCount() < MAX_PAGES) {
+                String page = pages[i];
+
+                if (page == null) {
+                    page = "";
+                } else if (page.length() > MAX_PAGE_LENGTH) {
+                    page = page.substring(0, MAX_PAGE_LENGTH);
+                }
 
-            this.pages.add(CraftChatMessage.fromString(page, true)[0]);
+                this.pages.add(CraftChatMessage.fromString(page, true)[0]);
+            } else {
+                break;
+            }
         }
     }
 
@@ -257,9 +283,8 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
 
     public void setPages(List<String> pages) {
         this.pages.clear();
-        for (String page : pages) {
-            addPage(page);
-        }
+        // FlamePaper - Fix Book Exploits
+        addPage(pages.toArray(new String[0]));
     }
 
     private boolean isValidPage(int page) {
diff --git a/src/main/java/org/github/paperspigot/PaperSpigotConfig.java b/src/main/java/org/github/paperspigot/PaperSpigotConfig.java
index d6d9899e27f5c002f31598deeaea8c52b158c175..f88deb3fbb3bb24f3bf2247b72a25d17c4e68ce4 100644
--- a/src/main/java/org/github/paperspigot/PaperSpigotConfig.java
+++ b/src/main/java/org/github/paperspigot/PaperSpigotConfig.java
@@ -174,52 +174,15 @@ public class PaperSpigotConfig
         Bukkit.getLogger().info( "Data value allowed items: " + StringUtils.join(dataValueAllowedItems, ", ") );
     }
 
-    public static boolean stackableLavaBuckets;
-    public static boolean stackableWaterBuckets;
-    public static boolean stackableMilkBuckets;
-    private static void stackableBuckets()
-    {
-        stackableLavaBuckets = getBoolean( "stackable-buckets.lava", false );
-        stackableWaterBuckets = getBoolean( "stackable-buckets.water", false );
-        stackableMilkBuckets = getBoolean( "stackable-buckets.milk", false );
-
-        Field maxStack;
-
-        try {
-            maxStack = Material.class.getDeclaredField("maxStack");
-            maxStack.setAccessible(true);
-
-            Field modifiers = Field.class.getDeclaredField("modifiers");
-            modifiers.setAccessible(true);
-            modifiers.setInt(maxStack, maxStack.getModifiers() & ~Modifier.FINAL);
-        } catch (Exception e) {
-            e.printStackTrace();
-            return;
-        }
-
-        try {
-            if (stackableLavaBuckets) {
-                maxStack.set(Material.LAVA_BUCKET, Material.BUCKET.getMaxStackSize());
-                Items.LAVA_BUCKET.c(Material.BUCKET.getMaxStackSize());
-            }
-
-            if (stackableWaterBuckets) {
-                maxStack.set(Material.WATER_BUCKET, Material.BUCKET.getMaxStackSize());
-                Items.WATER_BUCKET.c(Material.BUCKET.getMaxStackSize());
-            }
-
-            if (stackableMilkBuckets) {
-                maxStack.set(Material.MILK_BUCKET, Material.BUCKET.getMaxStackSize());
-                Items.MILK_BUCKET.c(Material.BUCKET.getMaxStackSize());
-            }
-        } catch (Exception e) {
-            e.printStackTrace();
-        }
-    }
-
     public static boolean warnForExcessiveVelocity;
     private static void excessiveVelocityWarning()
     {
         warnForExcessiveVelocity = getBoolean("warnWhenSettingExcessiveVelocity", true);
     }
+
+    public static int bookMaxPages;
+    private static void bookMaxPages()
+    {
+        bookMaxPages = getInt("book.max_pages", 5);
+    }
 }
