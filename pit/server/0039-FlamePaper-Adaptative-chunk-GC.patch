From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: LinsaFTW <25271111+linsaftw@users.noreply.github.com>
Date: Tue, 15 Mar 2022 11:29:43 -0300
Subject: [PATCH] (FlamePaper) Adaptative chunk GC


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index 584070c026634ebc8d0561e276cc663caf60036c..1df845f20c527bba1ee1ee51a8a8e263e31a5700 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -1393,7 +1393,14 @@ public class CraftWorld implements World {
     public void processChunkGC() {
         chunkGCTickCount++;
 
-        if (chunkLoadCount >= server.chunkGCLoadThresh && server.chunkGCLoadThresh > 0) {
+        // FlamePaper start - Adaptative chunk GC
+        int playerCount = getPlayers().size();
+        int viewDistance = getHandle().getServer().getViewDistance();
+        int viewChunks = ((viewDistance * 2) + 1);
+        int chunkGCLoadThreshold = org.github.paperspigot.PaperSpigotConfig.adaptativeChunkGC ? (world.keepSpawnInMemory ? 256 : 0) + playerCount * (viewChunks * viewChunks) : server.chunkGCLoadThresh;
+
+        if (chunkLoadCount > chunkGCLoadThreshold && chunkGCLoadThreshold > 0) { 
+        // FlamePaper end - Adaptative chunk GC
             chunkLoadCount = 0;
         } else if (chunkGCTickCount >= server.chunkGCPeriod && server.chunkGCPeriod > 0) {
             chunkGCTickCount = 0;
diff --git a/src/main/java/org/github/paperspigot/PaperSpigotConfig.java b/src/main/java/org/github/paperspigot/PaperSpigotConfig.java
index 5d4ebfbae03567b61a0450fcb15fe2a6883c9881..7c4b86db6c782b9720e8ec91a4946a170c31efd4 100644
--- a/src/main/java/org/github/paperspigot/PaperSpigotConfig.java
+++ b/src/main/java/org/github/paperspigot/PaperSpigotConfig.java
@@ -228,6 +228,12 @@ public class PaperSpigotConfig
     {
         bookMaxPages = getInt("book.max_pages", 5);
     }
+
+    public static boolean adaptativeChunkGC;
+    private static void adaptativeChunkGC()
+    {
+        adaptativeChunkGC = getBoolean("adaptative-chunk-gc", true);
+    }
     
     public static double knockbackFriction;
     public static double knockbackHorizontal;
