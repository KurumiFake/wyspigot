From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: cswhite2000 <18whitechristop@gmail.com>
Date: Tue, 14 Aug 2018 20:28:45 -0700
Subject: [PATCH] Optimise removeQueue


diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index 7c1cda03821116d66e28819c1fbaacb3a1c98886..d3d050cf79d8324fba1d3d3068f45ca503849c47 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -4,9 +4,12 @@ import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
 import com.mojang.authlib.GameProfile;
 import io.netty.buffer.Unpooled;
+
+import java.util.ArrayDeque;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collection;
+import java.util.Deque;
 import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
@@ -37,7 +40,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
     public double d;
     public double e;
     public final List<ChunkCoordIntPair> chunkCoordIntPairQueue = Lists.newLinkedList();
-    public final List<Integer> removeQueue = Lists.newLinkedList();
+    public final Deque<Integer> removeQueue = new ArrayDeque<>(); // Paper
     private final ServerStatisticManager bK;
     private float bL = Float.MIN_VALUE;
     private float bM = -1.0E8F;
@@ -228,10 +231,11 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
             Iterator iterator = this.removeQueue.iterator();
             int j = 0;
 
-            while (iterator.hasNext() && j < i) {
-                aint[j++] = ((Integer) iterator.next()).intValue();
-                iterator.remove();
-            }
+            // Paper start
+            Integer integer;
+            while (j < i && (integer = this.removeQueue.poll()) != null) {
+                aint[j++] = integer.intValue();
+            }// Paper end
 
             this.playerConnection.sendPacket(new PacketPlayOutEntityDestroy(aint));
         }
@@ -943,7 +947,10 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         this.lastSentExp = -1;
         this.bM = -1.0F;
         this.bN = -1;
-        this.removeQueue.addAll(((EntityPlayer) entityhuman).removeQueue);
+        // Paper start - Optimize remove queue
+        if (this.removeQueue != ((EntityPlayer) entityhuman).removeQueue) {
+            this.removeQueue.addAll(((EntityPlayer) entityhuman).removeQueue);
+        }
     }
 
     protected void a(MobEffect mobeffect) {
